package com.gammatunes.backend.presentation.bot.player.view;

import com.gammatunes.backend.domain.model.PlayerOutcome;
import org.springframework.stereotype.Component;

import static com.gammatunes.backend.presentation.ui.UiConstants.*;

@Component
public final class StatusMessageMapper {

    private StatusMessageMapper() {}

    public String toStatus(PlayerOutcome o) {
        return switch (o) {
            case ADDED_TO_QUEUE -> "‚úÖ Added to queue";
            case PLAYING_NOW -> "‚ñ∂Ô∏è Playing now";
            case SKIPPED -> SKIP + " Skipped to next track";
            case NO_NEXT_TRACK -> "‚ùå Nothing to skip ‚Äì queue is empty";
            case REPEATED -> "üîÅ Repeated current track";
            case REPEAT_ENABLED -> "üîÅ Repeat mode enabled";
            case REPEAT_DISABLED -> "üîÅ Repeat mode disabled";
            case PLAYING_PREVIOUS -> PREVIOUS + " Playing previous track";
            case NO_PREVIOUS_TRACK -> "‚ùå No previous track";
            case PAUSED -> PAUSE + " Paused";
            case ALREADY_PAUSED -> "‚ÑπÔ∏è Already paused";
            case RESUMED -> PLAY + " Resumed";
            case ALREADY_PLAYING -> "‚ÑπÔ∏è Already playing";
            case STOPPED -> STOP + " Stopped player";
            case ALREADY_STOPPED -> "‚ÑπÔ∏è Already stopped";
            case QUEUE_CLEARED -> "üóëÔ∏è Cleared queue";
            case QUEUE_EMPTY -> "‚ÑπÔ∏è Queue empty";
            case SHUFFLED -> "üîÄ Shuffled queue";
            case ERROR -> "‚ö†Ô∏è Unexpected error ‚Äì check logs!";
        };
    }
}
